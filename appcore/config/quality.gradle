apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'jdepend'
/*
 *
 *  Copyright (c) 2013 Cangol
 *   <p/>
 *   Licensed under the Apache License, Version 2.0 (the "License")
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *  <p/>
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  <p/>
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

// Add checkstyle, findbugs, pmd and lint to the check task.
check.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'

task checkstyle(type: Checkstyle) {
    configFile file("config/quality/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("config/quality/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

task findbugs(type: FindBugs, dependsOn: assembleDebug) {

    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("config/quality/findbugs/findbugs-filter.xml")
    classes = files("build/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "build/reports/findbugs/findbugs.xml"
        }
        html {
            destination "build/reports/findbugs/findbugs.html"
        }
    }

    classpath = files()
}

task pmd(type: Pmd) {
    ignoreFailures = false
    ruleSetFiles = files("config/quality/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "build/reports/pmd/pmd.xml"
        }
        html {
            destination "build/reports/pmd/pmd.html"
        }
    }
}
task jdepend(type: JDepend, dependsOn: 'compileDebugSources') {
    classesDir file("build/intermediates/classes")
    reports {
        xml.enabled = false
        text.enabled=true
        xml {
            destination 'build/reports/jdepend/jdepend.xml'
        }
        text {
            destination 'build/reports/jdepend/jdepend.txt'
        }
    }
}
android {
    lintOptions {
        abortOnError true
        xmlReport false
        htmlReport true
        lintConfig file("build/config/quality/lint/lint.xml")
        htmlOutput file("build/reports/lint/lint-result.html")
        xmlOutput file("build/reports/lint/lint-result.xml")
    }
}
